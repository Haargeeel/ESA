package org.dieschnittstelle.jee.esa.basics;


import java.lang.reflect.Field;
import java.lang.reflect.Method;

import org.dieschnittstelle.jee.esa.basics.annotations.AnnotatedStockItemBuilder;
import org.dieschnittstelle.jee.esa.basics.annotations.StockItemProxyImpl;

public class ShowAnnotations {

	public static void main(String[] args) {
		// we initialise the collection
		StockItemCollection collection = new StockItemCollection(
				"stockitems_annotations.xml", new AnnotatedStockItemBuilder());
		// we load the contents into the collection
		collection.load();

		for (IStockItem consumable : collection.getStockItems()) {
			;
			showAttributes(((StockItemProxyImpl)consumable).getProxiedObject());
		}

		// we initialise a consumer
		Consumer consumer = new Consumer();
		// ... and let them consume
		consumer.doShopping(collection.getStockItems());
	}

	/*
	 * UE BAS2 
	 */
	private static void showAttributes(Object consumable) {
		String className = consumable.getClass().getSimpleName();
		Field[] fields = consumable.getClass().getFields();
		int count = fields.length;
		int lastIndex = fields.length - 1;
		StringBuilder result = new StringBuilder();
		result.append("{" + className);
		for (int i = 0; i < count; i++) {
			String fieldName = fields[i].getName();
			result.append(fieldName);
		}
		System.out.println(result);

	}

}
